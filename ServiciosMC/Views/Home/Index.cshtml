<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Ubuntu+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="~/css/estilosHome.css" rel="stylesheet">
    <style>
    </style>
</head>
<body>
    <!--Contenedor general-->
    <div class="row justify-content-center">

        <div class="col-sm-10">

            <div class="row h-100">
                <div class="col-sm-12 col-md-8 col-lg-3 flex-grow-1">
                    <!--DIV IZQUIERDA-->
                    <div class="card ticket-card" style="margin-top: 3px;">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group d-flex align-items-center">
                                        <span class="material-symbols-outlined card-icon">
                                            order_approve
                                        </span>
                                        <h3 class="card-title ml-2">BUSCAR TICKET</h3>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-group d-flex align-items-center">
                                        <form id="buscarTicketForm" onsubmit="buscarTicket(); return false;" class="d-flex w-100">
                                            <input type="text" class="form-control" placeholder="Ingrese número de folio"
                                                   name="txtFolio" id="txtFolio" maxlength="10"
                                                   inputmode="numeric" oninput="validarSoloNumeros(this)" required />
                                            <button type="submit" class="btn btn-icon" id="btnBuscar">
                                                <span class="material-symbols-outlined">
                                                    search
                                                </span>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!---->
                    <div class="card infopedido-card" style="margin-top: 3px; display: none;" id="pedidoInfo">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group d-flex align-items-center">
                                        <span class="material-symbols-outlined card-icon">
                                            list_alt
                                        </span>
                                        <h3 class="card-title">INFORMACIÓN DEL PEDIDO</h3>
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-group d-flex flex-column align-items-start justify-content-end">
                                        <p><strong>Folio:</strong> <span id="folio"></span></p>
                                        <p><strong>Fecha:</strong> <span id="fecha"></span></p>
                                        <p><strong>Cajero:</strong> <span id="cajero"></span></p>
                                        <p><strong>Cliente:</strong> <span id="cliente"></span></p>
                                        <p><strong>Total:</strong> <span id="total"></span></p>
                                        <p><strong>Pago:</strong> <span id="pago"></span></p>
                                        <p><strong>Cambio:</strong> <span id="cambio"></span></p>
                                        <button class="btn btn-block w-100 mt-2" style="background-color: #e86217; color: #ffffff; " id="btnPasarProduccion" onclick="ingresaTicket()">
                                            <i class="fas fa-share" style="margin-right: 6px; vertical-align: middle;"></i> Pasar a producción
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>

                <div class="col-sm-12 col-md-6 col-lg-6 flex-grow-1">
                    <!--DIV DERECHA-->
                    <div class="card pedidos-card" style="margin-top: 3px">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12 cpedidos">
                                    <div class="form-group d-flex justify-content-center align-items-center">
                                        <span class="material-symbols-outlined card-icon">package_2</span>
                                        <h3 class="card-title ml-2">PEDIDOS</h3>
                                    </div>
                                </div>
                                <div class="col-12  oculto">
                                    <div class="form-group order-category category-1">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>En Producción</h3>
                                        </div>
                                        <div class="card-container" id="production-orders">
                                            <!-- Listado de pedidos en producción -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-2">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Completado</h3>
                                        </div>
                                        <div class="card-container" id="completed-orders">
                                            <!-- Listado de pedidos completados -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-3">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Envío por Mensajería</h3>
                                        </div>
                                        <div class="card-container" id="courier-orders">
                                            <!-- Listado de pedidos enviados por mensajería -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-4">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Envío por Paquetería</h3>
                                        </div>
                                        <div class="card-container" id="parcel-orders">
                                            <!-- Listado de pedidos enviados por paquetería -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-5">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Devuelto</h3>
                                        </div>
                                        <div class="card-container" id="returned-orders">
                                            <!-- Listado de pedidos devueltos -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-6">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Anulado</h3>
                                        </div>
                                        <div class="card-container" id="canceled-orders">
                                            <!-- Listado de pedidos anulados -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-7">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Entregado</h3>
                                        </div>
                                        <div class="card-container" id="delivered-orders">
                                            <!-- Listado de pedidos entregados -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-1">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Reprogramado</h3>
                                        </div>
                                        <div class="card-container" id="rescheduled-orders">
                                            <!-- Listado de pedidos Reprogramado -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 oculto">
                                    <div class="form-group order-category category-2">
                                        <div class="order-header">
                                            <span class="material-symbols-outlined order-icon">arrow_drop_down_circle</span>
                                            <h3>Recoge en oficina</h3>
                                        </div>
                                        <div class="card-container" id="pickup-orders">
                                            <!-- Listado de pedidos Recoge en oficina -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>

        </div>
        <!-- Modal -->
        <div id="order-modal" class="modal fade" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h5 class="modal-title" id="orderModalLabel">Detalles del Pedido</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <!-- Modal Body -->
                    <div class="modal-body">
                        <div id="modal-order-details">
                            <!-- Aquí se mostrarán los detalles del pedido -->
                        </div>
                        <!-- Selección de Piloto -->
                        <div id="pilot-selection" style="display: none;">
                            <h5>Asignar Piloto</h5>
                            <select id="pilot-select" class="form-control mb-2">
                                <!-- Opciones de pilotos -->
                            </select>
                            <button id="assign-pilot-btn" class="btn btn-primary btn-block" style="display: none;">Cambiar estado</button>
                        </div>
                        <!-- Selección de Paquetería -->
                        <div id="parcel-selection" style="display: none;">
                            <h5>Asignar Paquetería</h5>
                            <select id="parcel-select" class="form-control mb-2">
                                <!-- Opciones de paquetería -->
                            </select>
                            <button id="assign-parcel-btn" class="btn btn-primary btn-block" style="display: none;">Cambiar estado</button>
                        </div>
                    </div>
                    <!-- Modal Footer -->
                    <div class="modal-footer d-flex flex-column align-items-center">
                        <h5 class="mb-3">Cambiar estado:</h5>
                        <div id="status-change-options" class="d-flex flex-row gap-2">
                            <!-- Opciones para cambiar el estado del pedido -->
                        </div>
                    </div>
                </div>
            </div>
        </div>



    </div>

</body>
</html>

@section Scripts{
<script type="text/javascript">
            let parametros = "";
            let usuarioLogin = "";
            let pilotosActivos = [];
            let modalInstance;
            const categoryMap = {
                "En producción": "production",
                "Envío por Mensajería": "courier",
                "Envío por Paquetería": "parcel",
                "Entregado": "delivered",
                "Devuelto": "returned",
                "Anulado": "canceled",
                "Completado": "completed",
                "Recoge en oficina": "pickup",
                "Reprogramar": "rescheduled"
            };
            function validarSoloNumeros(input) {
                input.value = input.value.replace(/[^0-9]/g, ''); // Permitir solo números
            }

    $(document).ready(function () {
        consultaPedidos();
                 
    });

            //Consulta folio en firebird
            function buscarTicket() {
            $('#pedidoInfo').hide();
            let nofolio = $('#txtFolio').val();
            if (!nofolio) {
                alert("El campo Folio no puede estar vacío.");
            } else {
                document.getElementById('contenedor-loader').style.display = 'flex';
                $.ajax({
                    url: '@Url.Action("obtenerPedido", "Home")',
                    type: "POST",
                    data: { folio: nofolio },
                    success: function (data) {
                        if (data.existeError) {
                            dialogoEG({
                                type: "error",
                                title: "Error al buscar ticket",
                                mensaje: "Ocurrió un error al consultar la base de datos. Intente de nuevo, si el inconveniente persiste contacte al administrador.",
                                confirmar: "Aceptar",
                                img: "img/error.png"
                            });
                        } else {
                            if (data.existenDatos) {
                                let fechaF = formatoFecha(data.infoPedido.fecha);
                                let total = parseFloat(data.infoPedido.total).toFixed(2);
                                let pago = parseFloat(data.infoPedido.pago).toFixed(2);
                                let cambio = parseFloat(data.infoPedido.cambio).toFixed(2);
                                console.log(data);
                                // Mostrar la información del pedido
                                $('#folio').text(data.infoPedido.folio);
                                $('#fecha').text(fechaF);
                                $('#cajero').text(data.infoPedido.cajero);
                                $('#cliente').text(data.infoPedido.cliente);
                                $('#total').text("Q." + total);
                                $('#pago').text("Q." + pago);
                                $('#cambio').text("Q." + cambio);
                                $('#estatus').text(data.infoPedido.estatus);
                                parametros = {
                                    infoPedido: {
                                        folio: data.infoPedido.folio,
                                        fecha: data.infoPedido.fecha,
                                        cajero: data.infoPedido.cajero,
                                        cliente: data.infoPedido.cliente,
                                        total: data.infoPedido.total,
                                        pago: data.infoPedido.pago,
                                        cambio: data.infoPedido.cambio,
                                        estatus: data.infoPedido.estatus
                                    },
                                    usuario: ""                                    
                                };
                                // Mostrar el contenedor con la información del pedido
                                $('#pedidoInfo').show();
                            } else {
                                dialogoEG({
                                    type: "warning",
                                    title: "Folio Incorrecto",
                                    mensaje: "No existe ningún pedido con el número de folio ingresado. Favor verificarlo e intentar de nuevo.",
                                    confirmar: "Aceptar",
                                    img: "img/warning.png"
                                });
                                limpiar();
                            }
                        }
                        document.getElementById('contenedor-loader').style.display = 'none';
                    },
                    error: function (xhr, status, error) {
                        document.getElementById('contenedor-loader').style.display = 'none';
                    }
                });
            }
        }
            //Inserta un ticket y pasa a producción
            function ingresaTicket() {
                console.log(">>>> Los parametros son: ");
                console.log(parametros);
            document.getElementById('contenedor-loader').style.display = 'flex';
            $.ajax({
                url: '@Url.Action("ingresarProduccion", "Home")',
                type: "POST",
                data: parametros,
                success: function (data) {
                    console.log(data);
                    if (!data.success) {
                        console.log(data.errorMensaje)
                        dialogoEG({
                            type: "error",
                            title: "Error ingreso a producción",
                            mensaje: data.errorMensaje,
                            confirmar: "Aceptar",
                            img: "img/error.png"
                        })
                            limpiar();

                    } else {
                        dialogoEG({
                            type: "success",
                            title: "Ingreso exitoso",
                            mensaje: data.respuesta,
                            confirmar: "Aceptar",
                            img: "img/success.png"
                        }).then(() => {
                            limpiar();
                            consultaPedidos();
                        });
                        $('#pedidoInfo').hide();
                    }
                    document.getElementById('contenedor-loader').style.display = 'none';
                },
                error: function (xhr, status, error) {
                    document.getElementById('contenedor-loader').style.display = 'none';
                    console.log("Error al ingresar el ticket a producción:", error);
                    dialogoEG({
                        type: "error",
                        title: "Error de comunicación",
                        mensaje: "Ocurrió un error al ingresar el ticket a producción. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                        confirmar: "Aceptar",
                        img: "img/error.png"
                    })
                        limpiar();
                }
            });
        }
            //Consulta pedidos a cargo del usuario
            function consultaPedidos() {
             
            document.getElementById('contenedor-loader').style.display = 'flex';
            $.ajax({
                url: '@Url.Action("listaPedidos", "Home")',
                type: "POST",
                success: function (data) {
                    if (!data.success) {
                        console.log(data.errorMensaje)
                        dialogoEG({
                            type: "error",
                            title: "Error consulta de pedidos",
                            mensaje: data.errorMensaje,
                            confirmar: "Aceptar",
                            img: "img/error.png"
                        }).then(() => {
                            limpiar();
                        });
                    } else {
                        const pedidos = JSON.parse(data.respuesta).listadoPedidos;
                        console.log("pedidos:");
                        console.log(pedidos);
                        //Actualizar listado de pedidos
                        updateList(pedidos);
                    }
                    document.getElementById('contenedor-loader').style.display = 'none';
                },
                error: function (xhr, status, error) {
                    document.getElementById('contenedor-loader').style.display = 'none';
                    console.log("Error al consultar pedidos:", error);
                    dialogoEG({
                        type: "error",
                        title: "Error de comunicación",
                        mensaje: "Ocurrió un error al obtener listado de pedidos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                        confirmar: "Aceptar",
                        img: "img/error.png"
                    });
                }
            });
        }
            //Consulta pilotos activos
            function getPilotosAct() {
                 $.ajax({
                    url: '@Url.Action("listaPilotos", "Home")',
                    type: "POST",
                     success: function (data) {
                         if (!data.success) {
                             console.log(data.errorMensaje);
                         } else {
                             // Deserializar la respuesta JSON
                             let respuesta = JSON.parse(data.respuesta);

                             // Acceder al array de pilotos
                             let listadoPilotos = respuesta.listadoPilotos;

                             // Obtener el elemento select
                             let pilotSelect = $('#pilot-select');
                             // Vaciar las opciones existentes
                             pilotSelect.empty();
                             // Agregar la opción predeterminada
                             pilotSelect.append('<option value="">Selecciona un piloto</option>');

                             // Agregar los pilotos al select
                             listadoPilotos.forEach(piloto => {
                                 pilotSelect.append(`<option value="${piloto.id_usuario}">${piloto.nombre}</option>`);
                             });
                         }
                     },
                     error: function (xhr, status, error) {
                         document.getElementById('contenedor-loader').style.display = 'none';
                         console.log("Error al consultar pilotos:", error);
                         dialogoEG({
                             type: "error",
                             title: "Error de comunicación",
                             mensaje: "Ocurrió un error al obtener listado de pilotos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                             confirmar: "Aceptar",
                             img: "img/error.png"
                         });
                     }
            });
            }
            //Consulta todos los pilotos del sistema
            function getPilotosAll() {
                document.getElementById('contenedor-loader').style.display = 'flex';
                 $.ajax({
                    url: '@Url.Action("consultaPilotos", "Home")',
                    type: "POST",
                     success: function (data) {
                         if (!data.success) {
                             console.log(data.errorMensaje);
                         } else {
                             // Deserializar la respuesta JSON
                             let respuesta = JSON.parse(data.respuesta);

                             // Acceder al array de pilotos
                             let listadoPilotos = respuesta.listadoPilotos;
                             listadoPilotos.forEach(piloto => {
                                 console.log("ID Piloto: " + piloto.id_usuario);
                                 console.log("Nombre: " + piloto.nombre);
                                 console.log("Teléfono: " + piloto.telefono);
                                 console.log("Username: " + piloto.username);
                                 console.log("Activo: " + piloto.activo);
                                 console.log("Password: " + piloto.password);
                             });

                         }
                         document.getElementById('contenedor-loader').style.display = 'none';
                     },
                     error: function (xhr, status, error) {
                         document.getElementById('contenedor-loader').style.display = 'none';
                         console.log("Error al consultar pilotos:", error);
                         dialogoEG({
                             type: "error",
                             title: "Error de comunicación",
                             mensaje: "Ocurrió un error al obtener listado de pilotos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                             confirmar: "Aceptar",
                             img: "img/error.png"
                         });
                     }
            });
            }
            //Consulta paqueterías
            function getPaqueterias() {
                document.getElementById('contenedor-loader').style.display = 'flex';
                  $.ajax({
                    url: '@Url.Action("consultaPaqueterias", "Home")',
                    type: "POST",
                     success: function (data) {
                         if (!data.success) {
                             console.log(data.errorMensaje);
                         } else {
                             // Deserializar la respuesta JSON
                             let respuesta = JSON.parse(data.respuesta);

                             // Acceder al array de paqueterías
                             let listadoPaqueterias = respuesta.listadoPaqueterias;

                             // Obtener el elemento select
                             let parcelSelect = $('#parcel-select');
                             // Vaciar las opciones existentes
                             parcelSelect.empty();
                             // Agregar la opción predeterminada
                             parcelSelect.append('<option value="">Selecciona una paquetería</option>');

                             // Agregar las paqueterías al select
                             listadoPaqueterias.forEach(paq => {
                                 parcelSelect.append(`<option value="${paq.id_paqueteria}">${paq.nombre}</option>`);
                             });
                         }
                         document.getElementById('contenedor-loader').style.display = 'none';
                     },
                     error: function (xhr, status, error) {
                         document.getElementById('contenedor-loader').style.display = 'none';
                         console.log("Error al consultar pilotos:", error);
                         dialogoEG({
                             type: "error",
                             title: "Error de comunicación",
                             mensaje: "Ocurrió un error al obtener listado de pilotos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                             confirmar: "Aceptar",
                             img: "img/error.png"
                         });
                     }
            });
            }


            //Actualizar lista de pedidos
            function updateList(listaPedidos) {
                // Crear un objeto para almacenar el último estado de cada pedido
                const pedidosUltimoEstado = {};

                // Iterar sobre la lista de pedidos para encontrar el último estado de cada folio
                listaPedidos.forEach(pedido => {
                    const folio = pedido.folio;
                    // Si el folio no está en el objeto o si el estado actual es más reciente
                    if (!pedidosUltimoEstado[folio] || new Date(pedido.fecha_estado) > new Date(pedidosUltimoEstado[folio].fecha_estado)) {
                        pedidosUltimoEstado[folio] = pedido;
                    }
                });

                // Obtener los valores de los pedidos con el último estado
                const pedidosConUltimoEstado = Object.values(pedidosUltimoEstado);
                console.log("pedidosConUltimoEstado: ");
                console.log(pedidosConUltimoEstado);
                // Limpiar listas existentes
                const categories = ['production', 'courier', 'parcel', 'delivered', 'returned', 'canceled', 'completed', 'rescheduled', 'pickup'];

                categories.forEach(category => {
                    const contenedorPedidos = document.getElementById(`${category}-orders`); // Cambia este id según tu categoría
                    contenedorPedidos.innerHTML = ''; // Limpiar la lista existente

                    // Filtrar los pedidos por categoría utilizando el mapeo
                    const pedidosFiltrados = pedidosConUltimoEstado.filter(pedido => categoryMap[pedido.estado_actual] === category);

                    pedidosFiltrados.forEach(pedido => {

                        // Crear un contenedor 
                        const cardItem = document.createElement('div');
                        cardItem.classList.add('card-item'); 

                        // Crear elementos para cada parte del contenido
                        const cliente = document.createElement('div');
                        cliente.textContent = pedido.cliente;
                        cliente.classList.add('cliente');

                        const folio = document.createElement('div');
                        folio.textContent = `Folio ticket #${pedido.folio}`;
                        folio.classList.add('detalle');

                        const total = document.createElement('div');
                        total.textContent = `Total Q.${pedido.total}`;
                        total.classList.add('detalle');

                        const fecha = document.createElement('div');
                        fecha.textContent = pedido.fecha_estado;
                        fecha.classList.add('detalle');

                        // Agregar todos los elementos creados al div card-item
                        cardItem.appendChild(cliente);
                        cardItem.appendChild(folio);
                        cardItem.appendChild(total);
                        cardItem.appendChild(fecha);

                        // Agregar el evento click para el modal
                        cardItem.addEventListener('click', function () {
                            showModal(pedido);
                        });
                        // Agregar el card-item al contenedor correspondiente
                        contenedorPedidos.appendChild(cardItem);
                    });


                        //const contenedorProduccion = document.querySelector(`#${category}-orders`).closest('.col-12');

                        //if (contenedorProduccion.classList.contains('oculto')) {
                        //    contenedorProduccion.classList.remove('oculto');
                        //}
                    // Verificar si hay elementos en el contenedor
                    const contenedorProduccion = contenedorPedidos.closest('.col-12');
                    if (pedidosFiltrados.length > 0) {
                        // Si hay elementos, mostrar el contenedor
                        contenedorProduccion.classList.remove('oculto');
                    } else {
                        // Si no hay elementos, ocultar el contenedor
                        contenedorProduccion.classList.add('oculto');
                    }


                });
            }



            // Mostrar modal
            function showModal(pedido) {
                console.log("Abro diálogo del pedido: ");
                console.log(pedido);
                let piloto = null;
                let paqueteria = null;
                let obvs = null;

                const orderNumber = pedido.folio;
                const currentState = pedido.estado_actual;

                // Mostrar detalles del pedido en el modal
                document.getElementById('modal-order-details').textContent = `Detalles del pedido - Folio: #${orderNumber} Cliente: ${pedido.cliente}  Estado Actual: ${currentState}`;

                const statusChangeOptions = document.getElementById('status-change-options');
                const pilotSelection = document.getElementById('pilot-selection');
                const assignPilotBtn = document.getElementById('assign-pilot-btn');
                const parcelSelection = document.getElementById('parcel-selection');
                const assignParcelBtn = document.getElementById('assign-parcel-btn');

                // Resetear las opciones del modal
                statusChangeOptions.innerHTML = '';
                pilotSelection.style.display = 'none';
                assignPilotBtn.style.display = 'none';
                parcelSelection.style.display = 'none';
                assignParcelBtn.style.display = 'none';

                // Obtener los posibles siguientes estados
                const nextStates = getNextStates(currentState);
                console.log("Posibles siguientes estados [nextStates] ");
                console.log(nextStates);
                nextStates.forEach(nextState => {
                    const button = document.createElement('button');
                    button.textContent = nextState.label;
                    button.classList.add('btn', 'btn-primary', 'me-2');
                    button.addEventListener('click', function () {
                        if (nextState.state === 'courier') { // Enviar por Mensajería
                            getPilotosAct();
                            pilotSelection.style.display = 'block';
                            assignPilotBtn.style.display = 'block';
                            assignParcelBtn.style.display = 'none';
                            parcelSelection.style.display = 'none';

                            assignPilotBtn.addEventListener('click', function () {
                                const selectedPilot = document.getElementById('pilot-select').value;
                                if (selectedPilot) {
                                    console.log('Piloto asignado: ' + selectedPilot);
                                    piloto = selectedPilot;
                                    changeOrderState(pedido, nextState.state, piloto, paqueteria, obvs);
                                } else {
                                    alert('Por favor, selecciona un piloto.');
                                }
                            });

                        } else if (nextState.state === 'parcel') { // Enviar por Paquetería
                            getPaqueterias();
                            parcelSelection.style.display = 'block';
                            assignParcelBtn.style.display = 'block';
                            assignPilotBtn.style.display = 'none';
                            pilotSelection.style.display = 'none';

                            assignParcelBtn.addEventListener('click', function () {
                                const selectedParcel = document.getElementById('parcel-select').value;
                                if (selectedParcel) {
                                    paqueteria = selectedParcel;
                                    console.log('Paquetería asignada: ' + selectedParcel);
                                    changeOrderState(pedido, nextState.state, piloto, paqueteria, obvs);
                                } else {
                                    alert('Por favor, selecciona una empresa de paquetería.');
                                }
                            });

                        } else {
                            console.log("dentro de else");

                            changeOrderState(pedido, nextState.state, piloto, paqueteria, obvs);
                        }
                    });
                    statusChangeOptions.appendChild(button);
                });

                // Utilizar Bootstrap para mostrar el modal
                const modalElement = document.getElementById('order-modal');
                modalInstance = new bootstrap.Modal(modalElement);
                modalInstance.show();
            }

            // Obtener estados siguientes posibles
            function getNextStates(currentState) {
                console.log("Dentro de getNextStates: " + currentState);
                const stateTransitions = {
                    production: [
                        { state: 'completed', label: 'Completado' },
                        { state: 'canceled', label: 'Anulado' }
                    ],
                    completed: [
                        { state: 'courier', label: 'Enviar por Mensajería' },
                        { state: 'parcel', label: 'Enviar por Paquetería' },
                        { state: 'pickup', label: 'Recoge en oficina' },
                        { state: 'canceled', label: 'Anulado' }
                    ],
                    courier: [
                        { state: 'returned', label: 'Devuelto' },
                        { state: 'delivered', label: 'Entregado' }
                    ],
                    parcel: [
                        { state: 'returned', label: 'Devuelto' },
                        { state: 'delivered', label: 'Entregado' }
                    ],
                    delivered: [],
                    returned: [
                        { state: 'canceled', label: 'Anulado' },
                        { state: 'rescheduled', label: 'Reprogramar' }
                    ],
                    canceled: [],
                    pickup: [
                        { state: 'delivered', label: 'Entregado' },
                        { state: 'canceled', label: 'Anulado' }
                    ],
                    rescheduled: [
                        { state: 'courier', label: 'Enviar por Mensajería' },
                        { state: 'parcel', label: 'Enviar por Paquetería' },
                        { state: 'pickup', label: 'Recoge en oficina' },
                        { state: 'canceled', label: 'Anulado' }
                    ]
                };
                // Usar el mapeo para convertir currentState a su correspondiente en inglés
                const mappedState = categoryMap[currentState];
                return stateTransitions[mappedState] || [];
            }
            // Mapa de conversión de inglés a español
            const entospa = {
                "production": "En producción",
                "courier": "Envío por Mensajería",
                "parcel": "Envío por Paquetería",
                "delivered": "Entregado",
                "returned": "Devuelto",
                "canceled": "Anulado",
                "completed": "Completado",
                "pickup": "Recoge en oficina",
                "rescheduled": "Reprogramar"

            };

            // Función para obtener el equivalente en español dado un estado en inglés
            function getState(state) {
                return entospa[state] || "Estado desconocido";
            }

            // Cambiar estado del pedido
            function changeOrderState(pedido, newState, piloto, paqueteria, obvs) {
                console.log("changeOrderState ----> ");
                console.log("   pedido: ");
                console.log(pedido);
                newState = getState(newState);

                let parametros = {
                    'folio': pedido.folio,
                    'estadoAnterior': pedido.estado_actual,
                    'estadoNuevo': newState,
                    'usuario': "",
                    'idMensajero': piloto,
                    'idPaqueteria': paqueteria,
                    'observaciones': obvs
                };
                console.log("   parametros:");
                console.log(parametros);
                if (pedido.estado_actual && pedido.estado_actual !== newState) {
                    $.ajax({
                    url: '@Url.Action("cambioEstadoPedido", "Home")',
                    type: "POST",
                    data: parametros,
                    success: function (data) {
                        console.log(data);
                        if (!data.success) {
                            console.log(data.errorMensaje)
                            dialogoEG({
                                type: "error",
                                title: "Error cambio de estado",
                                mensaje: data.errorMensaje,
                                confirmar: "Aceptar",
                                img: "img/error.png"
                            }).then(() => {
                                //limpiar();
                            });
                        } else {
                            dialogoEG({
                                type: "success",
                                title: "Cambio de estado exitoso",
                                mensaje: data.respuesta,
                                confirmar: "Aceptar",
                                img: "img/success.png"
                            }).then(() => {
                                modalInstance.hide(); // Cerrar el modal después de mostrar el diálogo de éxito

                                consultaPedidos();
                            });
                        }
                        document.getElementById('contenedor-loader').style.display = 'none';
                    },
                    error: function (xhr, status, error) {
                        document.getElementById('contenedor-loader').style.display = 'none';
                        console.log("Error al ingresar el ticket a producción:", error);
                        dialogoEG({
                            type: "error",
                            title: "Error de comunicación",
                            mensaje: "Ocurrió un error al ingresar el ticket a producción. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                            confirmar: "Aceptar",
                            img: "img/error.png"
                        });
                    }
            });


                }






            }


        function limpiar() {
                parametros = "";
                $('#txtFolio').val("");
                $('#folio').text("");
                $('#fecha').text("");
                $('#cajero').text("");
                $('#cliente').text("");
                $('#total').text("");
                $('#pago').text("");
                $('#cambio').text("");
                $('#estatus').text("");
                $('#pedidoInfo').hide();
                // Desplazar hasta la parte superior de la página
                window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function formatoFecha(fecha) {
            var date = new Date(fecha);
            var dia = date.getDate();
            var mes = date.getMonth() + 1; // Los meses son base 0
            var anio = date.getFullYear();
            return (dia < 10 ? '0' + dia : dia) + '/' + (mes < 10 ? '0' + mes : mes) + '/' + anio;
        }
</script>
}
