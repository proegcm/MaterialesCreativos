<style>
    /* Estilo general para el card */
    .card {
        box-shadow: 3px 3px 7px 3px #656565;
        margin-top: 3px;
        border-radius: 10px; /* Opcional: para bordes redondeados en la tarjeta */
    }

    .card-body {
        padding: 20px; /* Ajusta el espaciado interno de la tarjeta */
    }

    /* Centra el título 'Pedidos' */
    .card .form-group > h3:first-of-type {
        text-align: center; /* Centra el título 'Pedidos' */
        margin-bottom: 15px; /* Ajusta el margen inferior del título 'Pedidos' */
        font-weight: normal;
        color: #0f0a35;
    }

    /* Estilo para los títulos dentro de cada 'order-category' */
    .card .order-category h3 {
        /*color: #274296;*/
        text-align: left; /* Alinea a la izquierda */
        font-size: 1.1rem; /* Ajusta el tamaño de la letra según sea necesario */
        margin-bottom: 10px; /* Ajusta el margen inferior del título */
        font-weight: normal;
    }

    /* Alinea el contenido dentro de las listas */
    .card .order-category ul {
        padding-left: 20px; /* Ajusta el padding para la lista */
        text-align: left; /* Alinea el texto dentro de las listas */
    }

    .card input.form-control {
        margin-bottom: 15px; /* Ajusta el margen inferior de los inputs */
    }

    .card .btn {
        background-color: #274296;
        color: #ffffff;
        border: none; /* Quita el borde del botón */
        padding: 10px; /* Ajusta el padding del botón */
        border-radius: 5px; /* Opcional: para bordes redondeados en el botón */
    }

        .card .btn i {
            margin-right: 6px;
            vertical-align: middle; /* Alinea verticalmente el ícono */
        }

    /*Información de pedidos*/
    .pedido-info-container {
        border-radius: 10px;
        max-height: 80%;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .pedido-info-container p {
            margin: 10px 0;
        }

        .pedido-info-container span {
            display: inline-block;
            margin-left: 10px;
        }

    .divPedidos {
        max-height: 100%;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    #pedidosContainer {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .order-info {
        margin-top: 30px;
    }


        .order-info button {
            margin-top: 10px;
        }


    .order-category {
        margin-top: 30px;
    }


        .order-category ul {
            list-style-type: none;
            padding: 0;
        }


        .order-category li {
            background-color: white;
            margin: 10px 0;
            padding: 15px;
            border-radius: 4px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            cursor: pointer;
        }


            .order-category li button {
                background-color: #28a745;
                padding: 5px 10px;
            }


                .order-category li button:hover {
                    background-color: #218838;
                }


</style>
<div id="contenedor-loader" class="loader" style="display: none;">
    <div class="spinner"></div>
</div>

<!--Contenedor general-->
<div class="row justify-content-center">

    <div class="col-sm-10">

        <div class="row h-100">
            <div class="col-sm-12 col-md-8 col-lg-4 flex-grow-1">
                <!--DIV IZQUIERDA-->
                <div class="card" style="box-shadow: 0px 0px 15px rgb(15 10 53 / 0.85); margin-top: 3px ">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <h3>Buscar ticket</h3>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    <input type="number" class="form-control" placeholder="Ingrese número de folio" name="txtFolio" id="txtFolio" min="0" maxlength="10" />
                                    <button class="btn btn-block w-100 mt-2" id="btnBuscar" onclick="buscarTicket()">
                                        <i class="fas fa-search" style="margin-right: 6px; vertical-align: middle;"></i> Buscar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card" style="box-shadow: 0px 0px 15px rgb(15 10 53 / 0.85); margin-top: 3px; display: none; " id="pedidoInfo">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <h3>Información del pedido</h3>
                                </div>
                            </div>
                            <div class="col-12">
                                <p><strong>Folio:</strong> <span id="folio"></span> <strong>   Fecha:</strong> <span id="fecha"></span></p>
                                <p><strong>Cajero:</strong> <span id="cajero"></span></p>
                                <p><strong>Cliente:</strong> <span id="cliente"></span></p>
                                <p><strong>Total:</strong> <span id="total"></span></p>
                                <p><strong>Pago:</strong> <span id="pago"></span></p>
                                <p><strong>Cambio:</strong> <span id="cambio"></span></p>
                                @*<p><strong>Estatus:</strong> <span id="estatus"></span></p>*@
                                <button class="btn btn-block w-100 mt-2" style="background-color: #aa4c9c; color: #ffffff;" id="btnPasarProduccion" onclick="ingresaTicket()">
                                    <i class="fas fa-share" style="margin-right: 6px; vertical-align: middle;"></i> Pasar a producción
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12 col-md-6 col-lg-8 flex-grow-1">
                <!--DIV DERECHA-->
                <div class="card" style="box-shadow: 0px 0px 15px rgb(15 10 53 / 0.85); margin-top: 3px">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <h3>Pedidos</h3>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>En Producción</h3>
                                    <ul id="production-orders">
                                        <!-- Listado de pedidos en producción -->
                                    </ul>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>Completado</h3>
                                    <ul id="completed-orders">
                                        <!-- Listado de pedidos completados -->
                                    </ul>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>Envío por Mensajería</h3>
                                    <ul id="courier-orders">
                                        <!-- Listado de pedidos enviados por mensajería -->
                                    </ul>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>Envío por Paquetería</h3>
                                    <ul id="parcel-orders">
                                        <!-- Listado de pedidos enviados por paquetería -->
                                    </ul>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>Devuelto</h3>
                                    <ul id="returned-orders">
                                        <!-- Listado de pedidos devueltos -->
                                    </ul>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>Anulado</h3>
                                    <ul id="canceled-orders">
                                        <!-- Listado de pedidos anulados -->
                                    </ul>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group order-category">
                                    <h3>Entregado</h3>
                                    <ul id="delivered-orders">
                                        <!-- Listado de pedidos entregados -->
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        
        
        </div>

    </div>


    <!-- Modal/Diálogo para mostrar información del pedido -->
    <!--<div id="order-modal" class="modal">
        <div class="modal-content">
            <span class="close-btn">×</span>
            <h2>Detalles del Pedido</h2>
            <div id="modal-order-details">-->
    <!-- Aquí se mostrarán los detalles del pedido -->
    <!--</div>
    <div id="status-change-options">-->
    <!-- Opciones para cambiar el estado del pedido -->
    <!--</div>-->
    <!-- Selección de Piloto -->
    <!--<div id="pilot-selection" style="display: none;">
        <h3>Asignar Piloto</h3>
        <select id="pilot-select">
        </select>
        <button id="assign-pilot-btn" style="display: none;">Cambiar estado</button>
    </div>-->
    <!-- Selección de Paquetería -->
    <!--<div id="parcel-selection" style="display: none;">
                <h3>Asignar Paquetería</h3>
                <select id="parcel-select">
                </select>
                <button id="assign-parcel-btn" style="display: none;">Cambiar estado</button>
            </div>
        </div>
    </div>-->
    <!-- Modal -->
    <div id="order-modal" class="modal fade" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="orderModalLabel">Detalles del Pedido</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!-- Modal Body -->
                <div class="modal-body">
                    <div id="modal-order-details">
                        <!-- Aquí se mostrarán los detalles del pedido -->
                    </div>
                    <!-- Selección de Piloto -->
                    <div id="pilot-selection" style="display: none;">
                        <h5>Asignar Piloto</h5>
                        <select id="pilot-select" class="form-control mb-2">
                            <!-- Opciones de pilotos -->
                        </select>
                        <button id="assign-pilot-btn" class="btn btn-primary btn-block" style="display: none;">Cambiar estado</button>
                    </div>
                    <!-- Selección de Paquetería -->
                    <div id="parcel-selection" style="display: none;">
                        <h5>Asignar Paquetería</h5>
                        <select id="parcel-select" class="form-control mb-2">
                            <!-- Opciones de paquetería -->
                        </select>
                        <button id="assign-parcel-btn" class="btn btn-primary btn-block" style="display: none;">Cambiar estado</button>
                    </div>
                </div>
                <!-- Modal Footer -->
                <div class="modal-footer d-flex flex-column align-items-center">
                    <h5 class="mb-3">Cambiar estado:</h5>
                    <div id="status-change-options" class="d-flex flex-row gap-2">
                        <!-- Opciones para cambiar el estado del pedido -->
                    </div>
                </div>
            </div>
        </div>
    </div>



</div>

        <script src="https://kit.fontawesome.com/a076d05399.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script type="text/javascript">
            let parametros = "";
            let usuarioLogin = "";
            let pilotosActivos = [];
            // Variable global para la instancia del modal
            let modalInstance;
            const categoryMap = {
                "En producción": "production",
                "Envío por Mensajería": "courier",
                "Envío por Paquetería": "parcel",
                "Entregado": "delivered",
                "Devuelto": "returned",
                "Anulado": "canceled",
                "Completado": "completed"
            };

            $(document).ready(function () {
                 $.ajax({
                    url: '@Url.Action("obtengoUsuario", "Home")',
                    type: "POST",
                    success: function (usuario) {
                        usuarioLogin = usuario;

                        consultaPedidos();
                    },
                    error: function (xhr, status, error) {
                        console.error("Error al obtener el usuario:", error);
                    }
                });
        });
            //Consulta folio en firebird
            function buscarTicket() {
            $('#pedidoInfo').hide();
            let nofolio = $('#txtFolio').val();
            if (!nofolio) {
                alert("El campo Folio no puede estar vacío.");
            } else {
                document.getElementById('contenedor-loader').style.display = 'flex';
                $.ajax({
                    url: '@Url.Action("obtenerPedido", "Home")',
                    type: "POST",
                    data: { folio: nofolio },
                    success: function (data) {
                        if (data.existeError) {
                            dialogoEG({
                                type: "error",
                                title: "Error al buscar ticket",
                                mensaje: "Ocurrió un error al consultar la base de datos. Intente de nuevo, si el inconveniente persiste contacte al administrador.",
                                confirmar: "Aceptar",
                                img: "img/error.png"
                            });
                        } else {
                            if (data.existenDatos) {
                                let fechaF = formatoFecha(data.infoPedido.fecha);
                                let total = parseFloat(data.infoPedido.total).toFixed(2);
                                let pago = parseFloat(data.infoPedido.pago).toFixed(2);
                                let cambio = parseFloat(data.infoPedido.cambio).toFixed(2);
                                console.log(data);
                                // Mostrar la información del pedido
                                $('#folio').text(data.infoPedido.folio);
                                $('#fecha').text(fechaF);
                                $('#cajero').text(data.infoPedido.cajero);
                                $('#cliente').text(data.infoPedido.cliente);
                                $('#total').text("Q." + total);
                                $('#pago').text("Q." + pago);
                                $('#cambio').text("Q." + cambio);
                                $('#estatus').text(data.infoPedido.estatus);
                                parametros = {
                                    'infoPedido': data.infoPedido,
                                    'usuario': usuarioLogin
                                };
                                // Mostrar el contenedor con la información del pedido
                                $('#pedidoInfo').show();
                            } else {
                                dialogoEG({
                                    type: "warning",
                                    title: "Folio Incorrecto",
                                    mensaje: "No existe ningún pedido con el número de folio ingresado. Favor verificarlo e intentar de nuevo.",
                                    confirmar: "Aceptar",
                                    img: "img/warning.png"
                                });
                            }
                        }
                        document.getElementById('contenedor-loader').style.display = 'none';
                    },
                    error: function (xhr, status, error) {
                        document.getElementById('contenedor-loader').style.display = 'none';
                    }
                });
            }
        }
            //Inserta un ticket y pasa a producción
            function ingresaTicket() {
                let nofolio = parametros.infoPedido.folio;
                document.getElementById('contenedor-loader').style.display = 'flex';
            $.ajax({
                url: '@Url.Action("ingresarProduccion", "Home")',
                type: "POST",
                data: parametros,
                success: function (data) {
                    console.log(data);
                    if (!data.success) {
                        console.log(data.errorMensaje)
                        dialogoEG({
                            type: "error",
                            title: "Error ingreso a producción",
                            mensaje: data.errorMensaje,
                            confirmar: "Aceptar",
                            img: "img/error.png"
                        }).then(() => {
                            limpiar();
                        });
                    } else {
                        dialogoEG({
                            type: "success",
                            title: "Ingreso exitoso",
                            mensaje: data.respuesta,
                            confirmar: "Aceptar",
                            img: "img/success.png"
                        }).then(() => {
                            limpiar();
                            consultaPedidos();
                        });
                        $('#pedidoInfo').hide();
                    }
                    document.getElementById('contenedor-loader').style.display = 'none';
                },
                error: function (xhr, status, error) {
                    document.getElementById('contenedor-loader').style.display = 'none';
                    console.log("Error al ingresar el ticket a producción:", error);
                    dialogoEG({
                        type: "error",
                        title: "Error de comunicación",
                        mensaje: "Ocurrió un error al ingresar el ticket a producción. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                        confirmar: "Aceptar",
                        img: "img/error.png"
                    });
                }
            });
        }
            //Consulta pedidos a cargo del usuario
            function consultaPedidos() {
                console.log("consultaPedidos - usuarioLogin: " + usuarioLogin);
            let parametros = {
                infoUsuario: {
                    usuario: usuarioLogin
                }
            };
            document.getElementById('contenedor-loader').style.display = 'flex';
            $.ajax({
                url: '@Url.Action("listaPedidos", "Home")',
                type: "POST",
                data: parametros,
                success: function (data) {
                    if (!data.success) {
                        console.log(data.errorMensaje)
                        dialogoEG({
                            type: "error",
                            title: "Error consulta de pedidos",
                            mensaje: data.errorMensaje,
                            confirmar: "Aceptar",
                            img: "img/error.png"
                        }).then(() => {
                            limpiar();
                        });
                    } else {
                        const pedidos = JSON.parse(data.respuesta).listadoPedidos;
                        console.log("pedidos:");
                        console.log(pedidos);
                        //Actualizar listado de pedidos
                        updateList(pedidos);
                    }
                    document.getElementById('contenedor-loader').style.display = 'none';
                },
                error: function (xhr, status, error) {
                    document.getElementById('contenedor-loader').style.display = 'none';
                    console.log("Error al consultar pedidos:", error);
                    dialogoEG({
                        type: "error",
                        title: "Error de comunicación",
                        mensaje: "Ocurrió un error al obtener listado de pedidos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                        confirmar: "Aceptar",
                        img: "img/error.png"
                    });
                }
            });
        }
            //Consulta pilotos activos
            function getPilotosAct() {
                 $.ajax({
                    url: '@Url.Action("listaPilotos", "Home")',
                    type: "POST",
                     success: function (data) {
                         if (!data.success) {
                             console.log(data.errorMensaje);
                         } else {
                             // Deserializar la respuesta JSON
                             let respuesta = JSON.parse(data.respuesta);

                             // Acceder al array de pilotos
                             let listadoPilotos = respuesta.listadoPilotos;

                             // Obtener el elemento select
                             let pilotSelect = $('#pilot-select');
                             // Vaciar las opciones existentes
                             pilotSelect.empty();
                             // Agregar la opción predeterminada
                             pilotSelect.append('<option value="">Selecciona un piloto</option>');

                             // Agregar los pilotos al select
                             listadoPilotos.forEach(piloto => {
                                 pilotSelect.append(`<option value="${piloto.id_usuario}">${piloto.nombre}</option>`);
                             });
                         }
                     },
                     error: function (xhr, status, error) {
                         document.getElementById('contenedor-loader').style.display = 'none';
                         console.log("Error al consultar pilotos:", error);
                         dialogoEG({
                             type: "error",
                             title: "Error de comunicación",
                             mensaje: "Ocurrió un error al obtener listado de pilotos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                             confirmar: "Aceptar",
                             img: "img/error.png"
                         });
                     }
            });
            }
            //Consulta todos los pilotos del sistema
            function getPilotosAll() {
                document.getElementById('contenedor-loader').style.display = 'flex';
                 $.ajax({
                    url: '@Url.Action("consultaPilotos", "Home")',
                    type: "POST",
                     success: function (data) {
                         if (!data.success) {
                             console.log(data.errorMensaje);
                         } else {
                             // Deserializar la respuesta JSON
                             let respuesta = JSON.parse(data.respuesta);

                             // Acceder al array de pilotos
                             let listadoPilotos = respuesta.listadoPilotos;
                             listadoPilotos.forEach(piloto => {
                                 console.log("ID Piloto: " + piloto.id_usuario);
                                 console.log("Nombre: " + piloto.nombre);
                                 console.log("Teléfono: " + piloto.telefono);
                                 console.log("Username: " + piloto.username);
                                 console.log("Activo: " + piloto.activo);
                                 console.log("Password: " + piloto.password);
                             });

                         }
                         document.getElementById('contenedor-loader').style.display = 'none';
                     },
                     error: function (xhr, status, error) {
                         document.getElementById('contenedor-loader').style.display = 'none';
                         console.log("Error al consultar pilotos:", error);
                         dialogoEG({
                             type: "error",
                             title: "Error de comunicación",
                             mensaje: "Ocurrió un error al obtener listado de pilotos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                             confirmar: "Aceptar",
                             img: "img/error.png"
                         });
                     }
            });
            }
            //Consulta paqueterías
            function getPaqueterias() {
                document.getElementById('contenedor-loader').style.display = 'flex';
                  $.ajax({
                    url: '@Url.Action("consultaPaqueterias", "Home")',
                    type: "POST",
                     success: function (data) {
                         if (!data.success) {
                             console.log(data.errorMensaje);
                         } else {
                             // Deserializar la respuesta JSON
                             let respuesta = JSON.parse(data.respuesta);

                             // Acceder al array de paqueterías
                             let listadoPaqueterias = respuesta.listadoPaqueterias;

                             // Obtener el elemento select
                             let parcelSelect = $('#parcel-select');
                             // Vaciar las opciones existentes
                             parcelSelect.empty();
                             // Agregar la opción predeterminada
                             parcelSelect.append('<option value="">Selecciona una paquetería</option>');

                             // Agregar las paqueterías al select
                             listadoPaqueterias.forEach(paq => {
                                 parcelSelect.append(`<option value="${paq.id_paqueteria}">${paq.nombre}</option>`);
                             });
                         }
                         document.getElementById('contenedor-loader').style.display = 'none';
                     },
                     error: function (xhr, status, error) {
                         document.getElementById('contenedor-loader').style.display = 'none';
                         console.log("Error al consultar pilotos:", error);
                         dialogoEG({
                             type: "error",
                             title: "Error de comunicación",
                             mensaje: "Ocurrió un error al obtener listado de pilotos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                             confirmar: "Aceptar",
                             img: "img/error.png"
                         });
                     }
            });
            }
            //Actualizar lista de pedidos
            function updateList(listaPedidos) {
                // Crear un objeto para almacenar el último estado de cada pedido
                const pedidosUltimoEstado = {};

                // Iterar sobre la lista de pedidos para encontrar el último estado de cada folio
                listaPedidos.forEach(pedido => {
                    const folio = pedido.folio;
                    // Si el folio no está en el objeto o si el estado actual es más reciente
                    if (!pedidosUltimoEstado[folio] || new Date(pedido.fecha_estado) > new Date(pedidosUltimoEstado[folio].fecha_estado)) {
                        pedidosUltimoEstado[folio] = pedido;
                    }
                });

                // Obtener los valores de los pedidos con el último estado
                const pedidosConUltimoEstado = Object.values(pedidosUltimoEstado);
                console.log("pedidosConUltimoEstado: ");
                console.log(pedidosConUltimoEstado);
                // Limpiar listas existentes
                const categories = ['production', 'courier', 'parcel', 'delivered', 'returned', 'canceled', 'completed'];

                categories.forEach(category => {
                    const ul = document.getElementById(`${category}-orders`);
                    ul.innerHTML = ''; // Limpiar la lista existente

                    // Filtrar los pedidos por categoría utilizando el mapeo
                    const pedidosFiltrados = pedidosConUltimoEstado.filter(pedido => categoryMap[pedido.estado_actual] === category);

                    // Agregar los pedidos filtrados a la lista correspondiente
                    pedidosFiltrados.forEach(pedido => {
                        const li = document.createElement('li');
                        li.textContent = `Folio: ${pedido.folio} - Cliente: ${pedido.cliente} - Fecha: ${pedido.fecha_estado}`;
                        li.addEventListener('click', function () {
                            showModal(pedido);
                        });
                        ul.appendChild(li);
                    });
                });
            }



            // Mostrar modal
            function showModal(pedido) {
                console.log("Abro diálogo del pedido: ");
                console.log(pedido);
                let piloto = null;
                let paqueteria = null;
                let obvs = null;

                const orderNumber = pedido.folio;
                const currentState = pedido.estado_actual;

                // Mostrar detalles del pedido en el modal
                document.getElementById('modal-order-details').textContent = `Detalles del pedido - Folio: #${orderNumber} Cliente: ${pedido.cliente}  Estado Actual: ${currentState}`;

                const statusChangeOptions = document.getElementById('status-change-options');
                const pilotSelection = document.getElementById('pilot-selection');
                const assignPilotBtn = document.getElementById('assign-pilot-btn');
                const parcelSelection = document.getElementById('parcel-selection');
                const assignParcelBtn = document.getElementById('assign-parcel-btn');

                // Resetear las opciones del modal
                statusChangeOptions.innerHTML = '';
                pilotSelection.style.display = 'none';
                assignPilotBtn.style.display = 'none';
                parcelSelection.style.display = 'none';
                assignParcelBtn.style.display = 'none';

                // Obtener los posibles siguientes estados
                const nextStates = getNextStates(currentState);
                console.log("Posibles siguientes estados [nextStates] ");
                console.log(nextStates);
                nextStates.forEach(nextState => {
                    const button = document.createElement('button');
                    button.textContent = nextState.label;
                    button.classList.add('btn', 'btn-primary', 'me-2');
                    button.addEventListener('click', function () {
                        if (nextState.state === 'courier') { // Enviar por Mensajería
                            getPilotosAct();
                            pilotSelection.style.display = 'block';
                            assignPilotBtn.style.display = 'block';
                            assignParcelBtn.style.display = 'none';
                            parcelSelection.style.display = 'none';

                            assignPilotBtn.addEventListener('click', function () {
                                const selectedPilot = document.getElementById('pilot-select').value;
                                if (selectedPilot) {
                                    console.log('Piloto asignado: ' + selectedPilot);
                                    piloto = selectedPilot;
                                    changeOrderState(pedido, nextState.state, piloto, paqueteria, obvs);
                                } else {
                                    alert('Por favor, selecciona un piloto.');
                                }
                            });

                        } else if (nextState.state === 'parcel') { // Enviar por Paquetería
                            getPaqueterias();
                            parcelSelection.style.display = 'block';
                            assignParcelBtn.style.display = 'block';
                            assignPilotBtn.style.display = 'none';
                            pilotSelection.style.display = 'none';

                            assignParcelBtn.addEventListener('click', function () {
                                const selectedParcel = document.getElementById('parcel-select').value;
                                if (selectedParcel) {
                                    paqueteria = selectedParcel;
                                    console.log('Paquetería asignada: ' + selectedParcel);
                                    changeOrderState(pedido, nextState.state, piloto, paqueteria, obvs);
                                } else {
                                    alert('Por favor, selecciona una empresa de paquetería.');
                                }
                            });

                        } else {
                            console.log("dentro de else");

                            changeOrderState(pedido, nextState.state, piloto, paqueteria, obvs);
                        }
                    });
                    statusChangeOptions.appendChild(button);
                });

                // Utilizar Bootstrap para mostrar el modal
                //const modal = new bootstrap.Modal(document.getElementById('order-modal'));
                //modal.show();

                // Utilizar Bootstrap para mostrar el modal
                const modalElement = document.getElementById('order-modal');
                modalInstance = new bootstrap.Modal(modalElement);
                modalInstance.show();
            }

            // Obtener estados siguientes posibles
            function getNextStates(currentState) {
                console.log("Dentro de getNextStates: " + currentState);
                const stateTransitions = {
                    production: [
                        { state: 'completed', label: 'Completado' },
                        { state: 'canceled', label: 'Anulado' }
                    ],
                    completed: [
                        { state: 'courier', label: 'Enviar por Mensajería' },
                        { state: 'parcel', label: 'Enviar por Paquetería' },
                        { state: 'canceled', label: 'Anulado' }
                    ],
                    courier: [
                        { state: 'returned', label: 'Devuelto' },
                        { state: 'delivered', label: 'Entregado' }
                    ],
                    parcel: [
                        { state: 'returned', label: 'Devuelto' },
                        { state: 'delivered', label: 'Entregado' }
                    ],
                    delivered: [],
                    returned: [{ state: 'canceled', label: 'Anulado' }],
                    canceled: []
                };
                // Usar el mapeo para convertir currentState a su correspondiente en inglés
                const mappedState = categoryMap[currentState];
                return stateTransitions[mappedState] || [];
            }
            // Mapa de conversión de inglés a español
            const entospa = {
                "production": "En producción",
                "courier": "Envío por Mensajería",
                "parcel": "Envío por Paquetería",
                "delivered": "Entregado",
                "returned": "Devuelto",
                "canceled": "Anulado",
                "completed": "Completado"
            };

            // Función para obtener el equivalente en español dado un estado en inglés
            function getState(state) {
                return entospa[state] || "Estado desconocido";
            }

            // Cambiar estado del pedido
            function changeOrderState(pedido, newState, piloto, paqueteria, obvs) {
                console.log("changeOrderState ----> ");
                console.log("   pedido: ");
                console.log(pedido);
                newState = getState(newState);
               
                let parametros = {
                    'folio': pedido.folio,
                    'estadoAnterior': pedido.estado_actual,
                    'estadoNuevo': newState,
                    'usuario': usuarioLogin,
                    'idMensajero': piloto,
                    'idPaqueteria': paqueteria,
                    'observaciones': obvs
                };
                console.log("   parametros:");
                console.log(parametros);
                //document.getElementById('contenedor-loader').style.display = 'flex';
                if (pedido.estado_actual && pedido.estado_actual !== newState) {
                    $.ajax({
                    url: '@Url.Action("cambioEstadoPedido", "Home")',
                    type: "POST",
                    data: parametros,
                    success: function (data) {
                        console.log(data);
                        if (!data.success) {
                            console.log(data.errorMensaje)
                            dialogoEG({
                                type: "error",
                                title: "Error cambio de estado",
                                mensaje: data.errorMensaje,
                                confirmar: "Aceptar",
                                img: "img/error.png"
                            }).then(() => {
                                //limpiar();
                            });
                        } else {
                            dialogoEG({
                                type: "success",
                                title: "Cambio de estado exitoso",
                                mensaje: data.respuesta,
                                confirmar: "Aceptar",
                                img: "img/success.png"
                            }).then(() => {
                                modalInstance.hide(); // Cerrar el modal después de mostrar el diálogo de éxito

                                consultaPedidos();
                            });
                        }
                        document.getElementById('contenedor-loader').style.display = 'none';
                    },
                    error: function (xhr, status, error) {
                        document.getElementById('contenedor-loader').style.display = 'none';
                        console.log("Error al ingresar el ticket a producción:", error);
                        dialogoEG({
                            type: "error",
                            title: "Error de comunicación",
                            mensaje: "Ocurrió un error al ingresar el ticket a producción. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                            confirmar: "Aceptar",
                            img: "img/error.png"
                        });
                    }
            });


                }





               
            }


        function limpiar() {
                parametros = "";
                $('#txtFolio').val("");
                $('#folio').text("");
                $('#fecha').text("");
                $('#cajero').text("");
                $('#cliente').text("");
                $('#total').text("");
                $('#pago').text("");
                $('#cambio').text("");
                $('#estatus').text("");
            }

        function formatoFecha(fecha) {
            var date = new Date(fecha);
            var dia = date.getDate();
            var mes = date.getMonth() + 1; // Los meses son base 0
            var anio = date.getFullYear();
            return (dia < 10 ? '0' + dia : dia) + '/' + (mes < 10 ? '0' + mes : mes) + '/' + anio;
        }
        </script>

