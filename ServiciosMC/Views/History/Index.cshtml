<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="~/DataTables/datatables.min.css" rel="stylesheet">
    <script src="~/DataTables/datatables.min.js"></script>
    @*<link href="~/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/dataTables.bootstrap5.css" rel="stylesheet">*@
    <title>Listado de Pedidos</title>
    <style>
    </style>
</head>
<body>
    <div class="row justify-content-center">
        <div class="col-sm-12">
            <div class="row">
                <h2>Historial de pedidos</h2>
            </div>
            <div class="row">
                
            </div>
            <div class="row">
                <div class="table-responsive">
                    <table id="tabla-pedidos" class="table hover row-border" style="width:100%">
                        <thead class="thead-dark">
                            <tr>
                                <th>No.Folio</th>
                                <th>Cliente</th>
                                <th>Usuario a cargo</th>
                                <th>Fecha pedido</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody id="tbody-pedidos">
                            <!-- Las filas se agregarán aquí dinámicamente -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>


    


</body>
</html>


<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">
    let usuarioLogin = "";
    $(document).ready(function () {

        let tablaPedidos = $('#tabla-pedidos').DataTable({
            //"columnDefs": [
            //    {
            //        "targets": [2, 9, 10, 11, 12, 13],
            //        "visible": false,
            //    },
            //],
            "destroy": true,
            "ordering": false,
            "responsive": true,
            "bLengthChange": false,
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.15/i18n/Spanish.json"
            }
        });
                 $.ajax({
                    url: '@Url.Action("obtengoUsuario", "Home")',
                    type: "POST",
                    success: function (usuario) {
                        usuarioLogin = usuario;
                        llenarTabla();
                    },
                    error: function (xhr, status, error) {
                        console.error("Error al obtener el usuario:", error);
                    }
                 });



function consultaPedidos() {
    return new Promise((resolve, reject) => {
        let pedidosUltimoEstado = {}; // Definir el objeto para almacenar el último estado de cada folio
        let pedidosConUltimoEstado = []; // Inicializar la lista de pedidos con el último estado

        console.log("consultaPedidos - usuarioLogin: " + usuarioLogin);

        let parametros = {
            infoUsuario: {
                usuario: usuarioLogin
            }
        };

        document.getElementById('contenedor-loader').style.display = 'flex';

        $.ajax({
            url: '@Url.Action("listaPedidos", "History")',
            type: "POST",
            data: parametros,
            success: function (data) {
                if (!data.success) {
                    console.log(data.errorMensaje);
                    dialogoEG({
                        type: "error",
                        title: "Error consulta de pedidos",
                        mensaje: data.errorMensaje,
                        confirmar: "Aceptar",
                        img: "img/error.png"
                    }).then(() => {
                        tablaPedidos.clear().draw();
                    });

                    // Rechazar la promesa si hay un error en la respuesta
                    reject(new Error(data.errorMensaje));
                } else {
                    const pedidos = JSON.parse(data.respuesta).listadoPedidos;
                    console.log("pedidos:");
                    console.log(pedidos);

                    // Iterar sobre la lista de pedidos para encontrar el último estado de cada folio
                    pedidos.forEach(pedido => {
                        const folio = pedido.folio;
                        // Si el folio no está en el objeto o si el estado actual es más reciente
                        if (!pedidosUltimoEstado[folio] || new Date(pedido.fecha_estado) > new Date(pedidosUltimoEstado[folio].fecha_estado)) {
                            pedidosUltimoEstado[folio] = pedido;
                        }
                    });

                    // Obtener los valores de los pedidos con el último estado
                    pedidosConUltimoEstado = Object.values(pedidosUltimoEstado);

                    // Resolver la promesa con los datos obtenidos
                    resolve(pedidosConUltimoEstado);
                }

                document.getElementById('contenedor-loader').style.display = 'none';
            },
            error: function (xhr, status, error) {
                document.getElementById('contenedor-loader').style.display = 'none';
                console.log("Error al consultar pedidos:", error);

                dialogoEG({
                    type: "error",
                    title: "Error de comunicación",
                    mensaje: "Ocurrió un error al obtener listado de pedidos. Intente nuevamente, si el inconveniente persiste contacte al administrador.",
                    confirmar: "Aceptar",
                    img: "img/error.png"
                });

                // Rechazar la promesa en caso de error
                reject(error);
            }
        });
    });
}




    function llenarTabla() {
        const tbody = document.getElementById("tbody-pedidos");
        // Llamar a consultaPedidos y manejar la promesa
        consultaPedidos().then(pedidosConUltimoEstado => {
            // Recorrer la lista de pedidos
            pedidosConUltimoEstado.forEach(pedido => {
                tablaPedidos.row.add([
                    pedido.folio,
                    pedido.cliente,
                    pedido.usuario_registro,
                    pedido.fecha_estado,
                    pedido.estado_actual
                ]).draw();
            });
        }).catch(error => {
            console.log("Error al llenar la tabla:", error);
        });
    }









        });

</script>