//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSMCLOGIN
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservice.materialescreativos.com/", ConfigurationName="WSMCLOGIN.WSLogin")]
    public interface WSLogin
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservice.materialescreativos.com/WSLogin/validaCredencialesRequest", ReplyAction="http://webservice.materialescreativos.com/WSLogin/validaCredencialesResponse")]
        WSMCLOGIN.validaCredencialesResponse validaCredenciales(WSMCLOGIN.validaCredencialesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservice.materialescreativos.com/WSLogin/validaCredencialesRequest", ReplyAction="http://webservice.materialescreativos.com/WSLogin/validaCredencialesResponse")]
        System.Threading.Tasks.Task<WSMCLOGIN.validaCredencialesResponse> validaCredencialesAsync(WSMCLOGIN.validaCredencialesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class validaCredencialesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="validaCredenciales", Namespace="http://webservice.materialescreativos.com/", Order=0)]
        public WSMCLOGIN.validaCredencialesRequestBody Body;
        
        public validaCredencialesRequest()
        {
        }
        
        public validaCredencialesRequest(WSMCLOGIN.validaCredencialesRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class validaCredencialesRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string datos;
        
        public validaCredencialesRequestBody()
        {
        }
        
        public validaCredencialesRequestBody(string datos)
        {
            this.datos = datos;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class validaCredencialesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="validaCredencialesResponse", Namespace="http://webservice.materialescreativos.com/", Order=0)]
        public WSMCLOGIN.validaCredencialesResponseBody Body;
        
        public validaCredencialesResponse()
        {
        }
        
        public validaCredencialesResponse(WSMCLOGIN.validaCredencialesResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class validaCredencialesResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        public validaCredencialesResponseBody()
        {
        }
        
        public validaCredencialesResponseBody(string @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface WSLoginChannel : WSMCLOGIN.WSLogin, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class WSLoginClient : System.ServiceModel.ClientBase<WSMCLOGIN.WSLogin>, WSMCLOGIN.WSLogin
    {

        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        /// 
        public string validaCredenciales(string xml)
        {
            WSMCLOGIN.validaCredencialesRequest inValue = new WSMCLOGIN.validaCredencialesRequest();
            inValue.Body = new WSMCLOGIN.validaCredencialesRequestBody();
            inValue.Body.datos = xml;
            WSMCLOGIN.validaCredencialesResponse retVal = ((WSMCLOGIN.WSLogin)(this)).validaCredenciales(inValue);
            return retVal.Body.@return;
        }

        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WSLoginClient() : 
                base(WSLoginClient.GetDefaultBinding(), WSLoginClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WSLoginPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSLoginClient(EndpointConfiguration endpointConfiguration) : 
                base(WSLoginClient.GetBindingForEndpoint(endpointConfiguration), WSLoginClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSLoginClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WSLoginClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSLoginClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WSLoginClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSLoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public WSMCLOGIN.validaCredencialesResponse validaCredenciales(WSMCLOGIN.validaCredencialesRequest request)
        {
            return base.Channel.validaCredenciales(request);
        }
        
        public System.Threading.Tasks.Task<WSMCLOGIN.validaCredencialesResponse> validaCredencialesAsync(WSMCLOGIN.validaCredencialesRequest request)
        {
            return base.Channel.validaCredencialesAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSLoginPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSLoginPort))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8080/WSLoginMC/WSLogin");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WSLoginClient.GetBindingForEndpoint(EndpointConfiguration.WSLoginPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WSLoginClient.GetEndpointAddress(EndpointConfiguration.WSLoginPort);
        }
        
        public enum EndpointConfiguration
        {
            
            WSLoginPort,
        }
    }
}
