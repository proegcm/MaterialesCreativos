//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSLOGIN
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://servicio.WSValida.Mcreativos.com/", ConfigurationName="WSLOGIN.WSPGLogin")]
    public interface WSPGLogin
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://servicio.WSValida.Mcreativos.com/WSPGLogin/ValidacionCredencialesRequest", ReplyAction="http://servicio.WSValida.Mcreativos.com/WSPGLogin/ValidacionCredencialesResponse")]
        WSLOGIN.ValidacionCredencialesResponse ValidacionCredenciales(WSLOGIN.ValidacionCredencialesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://servicio.WSValida.Mcreativos.com/WSPGLogin/ValidacionCredencialesRequest", ReplyAction="http://servicio.WSValida.Mcreativos.com/WSPGLogin/ValidacionCredencialesResponse")]
        System.Threading.Tasks.Task<WSLOGIN.ValidacionCredencialesResponse> ValidacionCredencialesAsync(WSLOGIN.ValidacionCredencialesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidacionCredencialesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidacionCredenciales", Namespace="http://servicio.WSValida.Mcreativos.com/", Order=0)]
        public WSLOGIN.ValidacionCredencialesRequestBody Body;
        
        public ValidacionCredencialesRequest()
        {
        }
        
        public ValidacionCredencialesRequest(WSLOGIN.ValidacionCredencialesRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class ValidacionCredencialesRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cadenaxml;
        
        public ValidacionCredencialesRequestBody()
        {
        }
        
        public ValidacionCredencialesRequestBody(string cadenaxml)
        {
            this.cadenaxml = cadenaxml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidacionCredencialesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidacionCredencialesResponse", Namespace="http://servicio.WSValida.Mcreativos.com/", Order=0)]
        public WSLOGIN.ValidacionCredencialesResponseBody Body;
        
        public ValidacionCredencialesResponse()
        {
        }
        
        public ValidacionCredencialesResponse(WSLOGIN.ValidacionCredencialesResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class ValidacionCredencialesResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        public ValidacionCredencialesResponseBody()
        {
        }
        
        public ValidacionCredencialesResponseBody(string @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface WSPGLoginChannel : WSLOGIN.WSPGLogin, System.ServiceModel.IClientChannel
    {
    }
    
   


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class WSPGLoginClient : System.ServiceModel.ClientBase<WSLOGIN.WSPGLogin>, WSLOGIN.WSPGLogin
    {

        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

        public WSPGLoginClient() :
                base(WSPGLoginClient.GetDefaultBinding(), WSPGLoginClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WSPGLoginPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public WSPGLoginClient(EndpointConfiguration endpointConfiguration) :
                base(WSPGLoginClient.GetBindingForEndpoint(endpointConfiguration), WSPGLoginClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public WSPGLoginClient(EndpointConfiguration endpointConfiguration, string remoteAddress) :
                base(WSPGLoginClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public WSPGLoginClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) :
                base(WSPGLoginClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public WSPGLoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WSLOGIN.ValidacionCredencialesResponse WSLOGIN.WSPGLogin.ValidacionCredenciales(WSLOGIN.ValidacionCredencialesRequest request)
        {
            return base.Channel.ValidacionCredenciales(request);
        }

        public string ValidacionCredenciales(string cadenaxml)
        {
            WSLOGIN.ValidacionCredencialesRequest inValue = new WSLOGIN.ValidacionCredencialesRequest();
            inValue.Body = new WSLOGIN.ValidacionCredencialesRequestBody();
            inValue.Body.cadenaxml = cadenaxml;
            WSLOGIN.ValidacionCredencialesResponse retVal = ((WSLOGIN.WSPGLogin)(this)).ValidacionCredenciales(inValue);
            return retVal.Body.@return;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSLOGIN.ValidacionCredencialesResponse> WSLOGIN.WSPGLogin.ValidacionCredencialesAsync(WSLOGIN.ValidacionCredencialesRequest request)
        {
            return base.Channel.ValidacionCredencialesAsync(request);
        }

        public System.Threading.Tasks.Task<WSLOGIN.ValidacionCredencialesResponse> ValidacionCredencialesAsync(string cadenaxml)
        {
            WSLOGIN.ValidacionCredencialesRequest inValue = new WSLOGIN.ValidacionCredencialesRequest();
            inValue.Body = new WSLOGIN.ValidacionCredencialesRequestBody();
            inValue.Body.cadenaxml = cadenaxml;
            return ((WSLOGIN.WSPGLogin)(this)).ValidacionCredencialesAsync(inValue);
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSPGLoginPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
               // result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSPGLoginPort))
            {
                return new System.ServiceModel.EndpointAddress("http://serverpagina:8080/WSPGLogin/WSPGLogin");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }

        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WSPGLoginClient.GetBindingForEndpoint(EndpointConfiguration.WSPGLoginPort);
        }

        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WSPGLoginClient.GetEndpointAddress(EndpointConfiguration.WSPGLoginPort);
        }

        public enum EndpointConfiguration
        {

            WSPGLoginPort,
        }
    }
}
